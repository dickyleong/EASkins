<!--
    SearchBox.xaml
    Copyright (c) 2012-2013 Bryan Kizer
    All rights reserved.
    https://github.com/belsrc/Metro-UI-Toolkit

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are
    met:

    Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

    Neither the name of the Organization nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
    IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
    TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
    PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
    HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
    TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MetroUiToolkit">

    <!-- Other Resources -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="FontSizes.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Combobox Textbox Styles -->
    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="TextBox">
        <ScrollViewer x:Name="PART_ContentHost"
                      Focusable="False" />
    </ControlTemplate>

    <!-- Start ComboBox Styles -->
    <Style TargetType="{x:Type local:SearchBox}">

        <!-- Default Styles -->
        <Setter Property="Background"
                Value="{StaticResource Black5}" />
        <Setter Property="Foreground"
                Value="{StaticResource Black80}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Black40}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="IsEditable"
                Value="True" />
        <Setter Property="MinWidth"
                Value="120" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="MaxDropDownHeight"
                Value="150" />
        <Setter Property="Cursor"
                Value="IBeam" />
        <Setter Property="Template">
            <Setter.Value>

                <!-- Combo Box Body -->
                <ControlTemplate TargetType="{x:Type local:SearchBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />

                        <!-- Placeholder Text -->
                        <TextBlock Foreground="{TemplateBinding Property=Foreground}"
                                   Margin="5,0,0,0"
                                   VerticalAlignment="Center"
                                   Name="HolderText"
                                   FontStyle="Italic"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Opacity="0.4"
                                   Text="{Binding PlaceholderText, RelativeSource={RelativeSource TemplatedParent}}"
                                   Visibility="Hidden" />

                        <!-- Toggle Button -->
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      Focusable="false"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">

                            <!-- Toggle Button Styles -->
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="20" />
                                                    </Grid.ColumnDefinitions>
                                                    <Border SnapsToDevicePixels="True"
                                                            x:Name="Border"
                                                            Grid.ColumnSpan="2"
                                                            Background="Transparent" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <!-- Search Button -->
                        <Button Name="BtnSearch"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Right"
                                Opacity="0.4"
                                MinWidth="26"
                                Width="{TemplateBinding ActualHeight}">

                            <!-- Search Button Styles -->
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Cursor"
                                            Value="Hand" />
                                    <Setter Property="Focusable"
                                            Value="False" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Name="BtnRoot"
                                                      Background="Transparent">
                                                    <Path x:Name="MagGlass"
                                                          Margin="0,-4,0,0"
                                                          Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center">
                                                        <Path.Data>
                                                            <PathGeometry FillRule="Nonzero"
                                                                          Figures="M17.388956,15.55011L13.417779,11.579C13.998483,10.66382 14.335255,9.57938 14.335255,8.41761 14.335291,5.15464 11.680655,2.5 8.417609,2.5 5.154636,2.5 2.5,5.15464 2.5,8.41761 2.5,11.68058 5.154636,14.33522 8.417609,14.33522 9.521711,14.33522 10.555947,14.031 11.441456,13.50235L15.439066,17.5 17.388956,15.55011z M4.706019,8.41761C4.706019,6.37102 6.371019,4.70598 8.417609,4.70598 10.464199,4.70598 12.129272,6.37102 12.129272,8.41761 12.129272,10.4642 10.464235,12.1292 8.417609,12.1292 6.371019,12.1292 4.706019,10.4642 4.706019,8.41761z" />
                                                        </Path.Data>
                                                    </Path>
                                                </Grid>

                                                <!-- Triggers for the Search Button -->
                                                <ControlTemplate.Triggers>

                                                    <!-- Mouse Over Trigger -->
                                                    <Trigger Property="IsMouseOver"
                                                             Value="true">
                                                        <Setter TargetName="BtnRoot"
                                                                Property="Background"
                                                                Value="{Binding ButtonHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SearchBox}}}" />
                                                        <Setter TargetName="MagGlass"
                                                                Property="Fill"
                                                                Value="{Binding ButtonHoverForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SearchBox}}}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--Content Presenter -->
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="5,5,23,5"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />

                        <!-- Edit Text Box -->
                        <TextBox x:Name="PART_EditableTextBox"
                                 CaretBrush="{StaticResource Black80}"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="Transparent"
                                 Foreground="{TemplateBinding Foreground}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />

                        <!-- Actual Drop Down Area -->
                        <Popup VerticalOffset="-1"
                               SnapsToDevicePixels="True"
                               Name="ddPopup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{Binding ListBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SearchBox}}}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource Black20}" />
                                <local:MetroScrollViewer SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </local:MetroScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <!-- Combo Box Triggers -->
                    <ControlTemplate.Triggers>

                        <!-- Placeholder Empty Text Trigger -->
                        <Trigger SourceName="PART_EditableTextBox"
                                 Property="Text"
                                 Value="">
                            <Setter TargetName="HolderText"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>

                        <!-- Placeholder Null Text Trigger -->
                        <Trigger SourceName="PART_EditableTextBox"
                                 Property="Text"
                                 Value="{x:Null}">
                            <Setter TargetName="HolderText"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>

                        <!-- Placeholder Focus Trigger -->
                        <Trigger Property="IsFocused"
                                 SourceName="PART_EditableTextBox"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource White100}" />
                        </Trigger>

                        <!-- Multitrigger for Text null and IsFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox"
                                           Property="IsFocused"
                                           Value="True" />
                                <Condition SourceName="PART_EditableTextBox"
                                           Property="Text"
                                           Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HolderText"
                                        Property="Visibility"
                                        Value="Visible" />
                                <Setter TargetName="HolderText"
                                        Property="Opacity"
                                        Value=".2" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Multitrigger for Text empty and IsFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_EditableTextBox"
                                           Property="IsFocused"
                                           Value="True" />
                                <Condition SourceName="PART_EditableTextBox"
                                           Property="Text"
                                           Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HolderText"
                                        Property="Visibility"
                                        Value="Visible" />
                                <Setter TargetName="HolderText"
                                        Property="Opacity"
                                        Value=".2" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Mouse Over Trigger -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="BtnSearch"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter Property="Background"
                                    Value="{StaticResource White100}" />
                        </Trigger>

                        <!-- Control Focus Trigger -->
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource White100}" />
                        </Trigger>

                        <!-- Has Items Trigger -->
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="ddPopup"
                                    Property="IsOpen"
                                    Value="False" />
                        </Trigger>

                        <!-- Is Grouping Trigger -->
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>

                        <!-- Is Editable Trigger -->
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop"
                                    Value="false" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Resources>

            <!-- Styles for the Combo Box Items -->
            <Style TargetType="ComboBoxItem">
                <Setter Property="Foreground"
                        Value="{Binding ListForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SearchBox}}}" />
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border Name="Border"
                                    Padding="2"
                                    SnapsToDevicePixels="true"
                                    BorderBrush="{Binding SeparatorColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SearchBox}}}"
                                    BorderThickness="0,0,0,1">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>

                                <!-- Combo Item Highlighted Trigger -->
                                <Trigger Property="IsHighlighted"
                                         Value="true">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{Binding SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SearchBox}}}" />
                                    <Setter Property="Foreground"
                                            Value="{Binding SelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SearchBox}}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>