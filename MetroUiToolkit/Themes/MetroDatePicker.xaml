<!--
    MetroDatePicker.xaml
    Copyright (c) 2012-2013 Bryan Kizer
    All rights reserved.
    https://github.com/belsrc/Metro-UI-Toolkit

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are
    met:

    Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

    Neither the name of the Organization nor the names of its contributors
    may be used to endorse or promote products derived from this software
    without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
    IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
    TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
    PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
    HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
    TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MetroUiToolkit">

    <!-- Other Resources -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="FontSizes.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Style for the calendar days of a month. (Single Month View) -->
    <Style TargetType="{x:Type CalendarDayButton}"
           x:Key="MetroCalendarDayButton">
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay" />
                                
                                <!-- State change for todays date in the calendar -->
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <!-- State change for blackout dates in the calendar -->
                            <VisualStateGroup Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="NormalDay" />
                                <VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="Blackout"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To=".8" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Background color for todays date in the calendar -->
                        <Rectangle x:Name="TodayBackground"
                                   Opacity="0"
                                   Fill="{Binding TodayBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

                        <!-- Background color for the selected date in the calendar -->
                        <Rectangle x:Name="SelectedBackground"
                                   Opacity="0"
                                   Fill="{Binding SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

                        <!-- Border color for the selected date in the calendar -->
                        <Rectangle x:Name="DayButtonFocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   Stroke="{Binding SelectedBorderColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

                        <!-- Background color for the hovered date in the calendar -->
                        <Rectangle x:Name="HighlightBackground"
                                   Opacity="0"
                                   Fill="{Binding HighlightBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

                        <!-- Control Background and border -->
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" />

                        <!-- Calendar date foreground color -->
                        <ContentPresenter x:Name="NormalText"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="5,1,5,1">
                            <TextElement.Foreground>
                                <SolidColorBrush x:Name="selectedText"
                                                 Color="{Binding Foreground.(SolidColorBrush.Color), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />
                            </TextElement.Foreground>
                        </ContentPresenter>

                        <!-- Blackout date overlay icon -->
                        <Path x:Name="Blackout"
                              Opacity="0"
                              Margin="3"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              RenderTransformOrigin="0.5,0.5"
                              Fill="{Binding BlackoutIconColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                              Stretch="Fill"
                              Data="M8.1772461,11.029181 L10.433105,
                                    11.029181 L11.700684,12.801641 L12.973633,
                                    11.029181 L15.191895,11.029181 L12.844727,
                                    13.999395 L15.21875,17.060919 L12.962891,
                                    17.060919 L11.673828,15.256231 L10.352539,
                                    17.060919 L8.1396484,17.060919 L10.519043,
                                    14.042364 z" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- IsMouseOver Trigger -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    TargetName="HighlightBackground"
                                    Value="1" />
                        </Trigger>

                        <!-- IsEnabled Trigger -->
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="NormalText"
                                    Value=".4" />
                        </Trigger>

                        <!-- IsSelected Trigger -->
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Opacity"
                                    TargetName="SelectedBackground"
                                    Value=".8" />
                            <Setter Property="TextElement.Foreground"
                                    TargetName="NormalText"
                                    Value="{Binding HeaderForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the months of a year and years of a decade. (Year or Decade View) -->
    <Style TargetType="{x:Type CalendarButton}"
           x:Key="MetroCalendarButton">
        <Setter Property="MinWidth"
                Value="40" />
        <Setter Property="MinHeight"
                Value="42" />
        <Setter Property="FontSize"
                Value="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>

                        <!-- Background color for the selected month/year in the calendar -->
                        <Rectangle x:Name="SelectedBackground"
                                   Opacity="0"
                                   Fill="{Binding SelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

                        <!-- Background color for the hovered month/year in the calendar -->
                        <Rectangle x:Name="Background"
                                   Opacity="0"
                                   Fill="{Binding HighlightBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

                        <!-- Border color for the selected date in the calendar -->
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                                   Visibility="Collapsed"
                                   IsHitTestVisible="false"
                                   Stroke="{Binding SelectedBorderColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />

                        <!-- Calendar month/year foreground color -->
                        <ContentPresenter x:Name="NormalText"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="1,0,1,1"
                                          TextElement.Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- IsMouseOver Trigger -->
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    TargetName="Background"
                                    Value="1" />
                        </Trigger>

                        <!-- IsEnabled Trigger -->
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    TargetName="NormalText"
                                    Value=".4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Single Month Day-of-the-Week Header Text -->
    <Style x:Key="MetroCalendarItem"
           TargetType="{x:Type CalendarItem}">
        <Setter Property="Margin"
                Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                       FontWeight="Bold"
                                       FontSize="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                       FontFamily="{Binding FontFamily, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                       Margin="0,6,0,6"
                                       Text="{Binding}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                        </DataTemplate>
                    </ControlTemplate.Resources>

                    <!-- Calendar Item Root -->
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor"
                                             Color="#A5FFFFFF" />
                        </Grid.Resources>

                        <!-- Calendar area border -->
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="1">
                            <Border BorderBrush="{TemplateBinding Background}"
                                    BorderThickness="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <!-- Button to go to the previous month or year -->
                                    <Button x:Name="PART_PreviousButton"
                                            Focusable="False"
                                            HorizontalAlignment="Left"
                                            Grid.Column="0"
                                            Grid.Row="0"
                                            Height="20"
                                            Width="28">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid Cursor="Hand">
                                                                <!--<Rectangle Fill="Transparent" Opacity="1" Stretch="Fill"/>-->
                                                                <Grid  Background="Transparent">
                                                                    <Path x:Name="path"
                                                                          Margin="14,-6,0,0"
                                                                          Stretch="Fill"
                                                                          HorizontalAlignment="Left"
                                                                          Height="10"
                                                                          VerticalAlignment="Center"
                                                                          Width="6"
                                                                          Fill="{Binding HeaderForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                                                          Data="M288.75,232.25 L288.75,240.625 L283,236.625 z" />
                                                                </Grid>
                                                            </Grid>

                                                            <ControlTemplate.Triggers>
                                                                <!-- Glyph hover trigger -->
                                                                <Trigger Property="IsMouseOver"
                                                                         Value="true">
                                                                    <Setter TargetName="path"
                                                                            Property="Opacity"
                                                                            Value=".8" />
                                                                </Trigger>

                                                                <!-- Glyph disabled trigger -->
                                                                <Trigger Property="IsEnabled"
                                                                         Value="false">
                                                                    <Setter TargetName="path"
                                                                            Property="Opacity"
                                                                            Value=".4" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <!--Button to go up a level to the year or decade.-->
                                    <Button x:Name="PART_HeaderButton"
                                            FontWeight="Bold"
                                            Focusable="False"
                                            FontSize="10.5"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Grid.Column="1"
                                            Grid.Row="0">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid Cursor="Hand">
                                                                <ContentPresenter x:Name="buttonContent"
                                                                                  Margin="1,4,1,9"
                                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                  Content="{TemplateBinding Content}"
                                                                                  TextElement.Foreground="{Binding HeaderForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <!-- Glyph hover trigger -->
                                                                <Trigger Property="IsMouseOver"
                                                                         Value="true">
                                                                    <Setter TargetName="buttonContent"
                                                                            Property="Opacity"
                                                                            Value=".8" />
                                                                </Trigger>

                                                                <!-- Glyph disabled trigger -->
                                                                <Trigger Property="IsEnabled"
                                                                         Value="false">
                                                                    <Setter TargetName="buttonContent"
                                                                            Property="Opacity"
                                                                            Value=".5" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <!-- Button to go to the next month or year -->
                                    <Button x:Name="PART_NextButton"
                                            Focusable="False"
                                            HorizontalAlignment="Right"
                                            Grid.Column="2"
                                            Grid.Row="0"
                                            Height="20"
                                            Width="28">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Grid Cursor="Hand">
                                                                <!--<Rectangle Fill="#11E5EBF1" Opacity="1" Stretch="Fill"/>-->
                                                                <Grid Background="Transparent">
                                                                    <Path x:Name="path"
                                                                          HorizontalAlignment="Right"
                                                                          Height="10"
                                                                          Margin="0,-6,14,0"
                                                                          Stretch="Fill"
                                                                          VerticalAlignment="Center"
                                                                          Width="6"
                                                                          Fill="{Binding HeaderForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                                                          Data="M282.875,231.875 L282.875,240.375 L288.625,236 z" />
                                                                </Grid>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <!-- Glyph hover trigger -->
                                                                <Trigger Property="IsMouseOver"
                                                                         Value="true">
                                                                    <Setter TargetName="path"
                                                                            Property="Opacity"
                                                                            Value=".8" />
                                                                </Trigger>

                                                                <!-- Glyph disabled trigger -->
                                                                <Trigger Property="IsEnabled"
                                                                         Value="false">
                                                                    <Setter TargetName="path"
                                                                            Property="Opacity"
                                                                            Value=".5" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <!-- Month view grid layout -->
                                    <Grid x:Name="PART_MonthView"
                                          Visibility="Visible"
                                          Grid.ColumnSpan="3"
                                          Grid.Row="1"
                                          Margin="6,-1,6,6"
                                          HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>

                                    <!-- Year view grid layout -->
                                    <Grid x:Name="PART_YearView"
                                          Visibility="Hidden"
                                          Grid.ColumnSpan="3"
                                          Grid.Row="1"
                                          HorizontalAlignment="Center"
                                          Margin="6,-3,7,6">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>

                        <Rectangle x:Name="PART_DisabledVisual"
                                   Fill="{StaticResource DisabledColor}"
                                   Opacity="0"
                                   Stretch="Fill"
                                   Stroke="{StaticResource DisabledColor}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- IsEnabled Trigger -->
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_DisabledVisual"
                                    Value="Visible" />
                        </Trigger>

                        <!-- Year view visible data trigger -->
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                                     Value="Year">
                            <Setter Property="Visibility"
                                    TargetName="PART_MonthView"
                                    Value="Hidden" />
                            <Setter Property="Visibility"
                                    TargetName="PART_YearView"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                                     Value="Decade">
                            <Setter Property="Visibility"
                                    TargetName="PART_MonthView"
                                    Value="Hidden" />
                            <Setter Property="Visibility"
                                    TargetName="PART_YearView"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroCalendar"
           TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle"
                Value="{StaticResource MetroCalendarButton}" />
        <Setter Property="CalendarDayButtonStyle"
                Value="{StaticResource MetroCalendarDayButton}" />
        <Setter Property="CalendarItemStyle"
                Value="{StaticResource MetroCalendarItem}" />
        <Setter Property="Foreground"
                Value="{StaticResource Black100}" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">

                    <!-- The first two gradient stops specifies the background for the calendar's heading and navigation buttons -->
                    <GradientStop Color="{Binding CalendarHeaderColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                  Offset="0" />
                    <GradientStop Color="{Binding CalendarHeaderColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                  Offset="0.16" />

                    <!-- The next gradient stop specifies the background for the calendar area -->
                    <GradientStop Color="{Binding CalendarBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                  Offset="0.16" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Black20}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root"
                                HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      Style="{TemplateBinding CalendarItemStyle}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MetroDatePicker}">
        <Setter Property="Foreground"
                Value="{StaticResource Black80}" />
        <Setter Property="IsTodayHighlighted"
                Value="True" />
        <Setter Property="SelectedDateFormat"
                Value="Short" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="Background"
                Value="{StaticResource White100}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Black20}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="CalendarStyle"
                Value="{StaticResource MetroCalendar}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MetroDatePicker}">

                    <!-- Control Border -->
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <Grid x:Name="PART_Root"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- DatePicker Dropdown Button -->
                            <Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    Foreground="{TemplateBinding Foreground}"
                                    Focusable="False"
                                    HorizontalAlignment="Left"
                                    Margin="3,0"
                                    Background="Transparent"
                                    VerticalAlignment="Top">
                                <Button.Style>
                                    <!--The template for the calendar dropdown button.-->
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Grid>
                                                        <Grid Background="Transparent"
                                                              FlowDirection="LeftToRight"
                                                              HorizontalAlignment="Center"
                                                              Height="18"
                                                              Margin="0"
                                                              VerticalAlignment="Center"
                                                              Width="19">
                                                            <Path Fill="{Binding CalendarIconColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                                                  x:Name="calendarIconPath"
                                                                  HorizontalAlignment="Right"
                                                                  VerticalAlignment="Center"
                                                                  Margin="0,0,-10,0"
                                                                  Data="F1 M-11.574224,14.111324C-13.345709,14.111324 -15.117193,14.111324 -16.888678,14.111324 -16.888678,13.623043 -16.888678,13.134762 -16.888678,12.646481 -16.3086,12.646481 -15.728521,12.646481 -15.148443,12.646481 -15.148443,10.90234 -15.148443,9.1581995 -15.148443,7.4140587 -15.744146,7.5429649 -16.33985,7.6718712 -16.935553,7.8007774 -16.935553,7.3007774 -16.935553,6.8007774 -16.935553,6.3007774 -15.724615,6.0566368 -14.513678,5.8124962 -13.30274,5.5683556 -13.30274,7.9277307 -13.30274,10.287106 -13.30274,12.646481 -12.726568,12.646481 -12.150396,12.646481 -11.574224,12.646481 -11.574224,13.134762 -11.574224,13.623043 -11.574224,14.111324z M-23.937506,13.835934C-23.937506,13.298825 -23.937506,12.761715 -23.937506,12.224606 -23.076558,12.830344 -21.803913,13.10853 -20.864264,12.535152 -20.131651,12.002244 -20.48758,10.755944 -21.376458,10.632689 -21.922656,10.467213 -22.496711,10.524352 -23.058599,10.513668 -23.058599,10.041012 -23.058599,9.5683555 -23.058599,9.0956993 -22.288553,9.0736723 -21.291501,9.2380003 -20.82325,8.4826652 -20.40571,7.7038385 -21.142185,6.8292898 -21.980474,6.9804649 -22.539377,6.8182995 -23.401904,7.5515725 -23.621099,7.3741539 -23.621099,6.9206586 -23.621099,6.4671634 -23.621099,6.0136681 -22.425579,5.4636951 -20.913045,5.3489996 -19.740135,6.0124781 -18.446658,6.7442676 -18.552563,8.945129 -19.936402,9.5175283 -20.373273,9.6664148 -20.721453,9.7610201 -20.08204,9.8283043 -19.005901,10.052177 -18.347175,11.223362 -18.635873,12.267084 -18.886109,13.628135 -20.374614,14.276363 -21.635138,14.255129 -22.416732,14.270309 -23.230875,14.196209 -23.937506,13.835931z M-27.3125,0.15625C-27.3125,5.6770833 -27.3125,11.197917 -27.3125,16.71875 -20.979167,16.71875 -14.645833,16.71875 -8.3125,16.71875 -8.3125,11.197917 -8.3125,5.6770833 -8.3125,0.15625 -14.645833,0.15625 -20.979167,0.15625 -27.3125,0.15625z M-25.46875,4.65625C-20.333333,4.65625 -15.197917,4.65625 -10.0625,4.65625 -10.0625,8.1145833 -10.0625,11.572917 -10.0625,15.03125 -15.197917,15.03125 -20.333333,15.03125 -25.46875,15.03125 -25.46875,11.572917 -25.46875,8.1145833 -25.46875,4.65625z" />
                                                        </Grid>
                                                    </Grid>

                                                    <ControlTemplate.Triggers>
                                                        <!-- Glyph hover trigger -->
                                                        <Trigger Property="IsMouseOver"
                                                                 Value="true">
                                                            <Setter TargetName="calendarIconPath"
                                                                    Property="Fill"
                                                                    Value="{Binding CalendarIconHoverColor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}" />
                                                        </Trigger>

                                                        <!-- Glyph disabled trigger -->
                                                        <Trigger Property="IsEnabled"
                                                                 Value="false">
                                                            <Setter TargetName="calendarIconPath"
                                                                    Property="Opacity"
                                                                    Value=".4" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <!-- DatePicker Textbox Control -->
                            <DatePickerTextBox x:Name="PART_TextBox"
                                               Grid.Column="0"
                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MetroDatePicker}}}"
                                               Background="Transparent"
                                               Focusable="{TemplateBinding Focusable}"
                                               HorizontalContentAlignment="Stretch"
                                               Grid.Row="0"
                                               BorderThickness="0"
                                               BorderBrush="{x:Null}"
                                               IsReadOnly="True"
                                               VerticalContentAlignment="Center" />

                            <!-- Datepicker Calendar Control -->
                            <Grid x:Name="PART_DisabledVisual"
                                  Grid.ColumnSpan="2"
                                  Grid.Column="0"
                                  IsHitTestVisible="False"
                                  Opacity="0"
                                  Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup"
                                       AllowsTransparency="True"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=PART_TextBox}"
                                       HorizontalOffset="-3"
                                       StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>