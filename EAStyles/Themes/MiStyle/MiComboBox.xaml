<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Mi="clr-namespace:EAStyles.Controls.MiStyle"
                    xmlns:local="clr-namespace:EAStyles.Themes.MiStyle">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/EAStyles;component/Themes/MiStyle/MiBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--下拉按钮内部背景色-->
                    <Border x:Name="Back" Background="{StaticResource EGrayBrush}" BorderThickness="1" BorderBrush="Transparent">
                        <!--下拉按钮内边框-->
                        <Path Name="PathFill" Fill="#FF808080"  Width="10" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                            <!--<Setter TargetName="Back" Property="Background" Value="#99cb8a"></Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Combox-->
    <Style TargetType="Mi:MiComboBox">
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="FontSize" Value="{StaticResource SmallFontSize}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <Setter Property="MinHeight" Value="22"></Setter>
                    <Setter Property="MinWidth" Value="40"></Setter>
                    <Setter Property="FontSize" Value="{StaticResource SmallFontSize}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Back" Background="#AAFFFFFF"  BorderThickness="0,0,0,0"  >
                                    <!--<ContentPresenter ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0" ></ContentPresenter>-->
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="LightGray"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Mi:MiComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70*"/>
                            <ColumnDefinition Width="30*" MinWidth="16" MaxWidth="30"/>
                        </Grid.ColumnDefinitions>
                        <!--文字区域背景和边线样式-->                        
                        <TextBox VerticalAlignment="Center" Grid.Column="0" BorderThickness="0" IsReadOnly="{TemplateBinding IsReadOnly}" IsEnabled="{TemplateBinding IsEditable}" 
                                 Text="{Binding Path=Text,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource TemplatedParent}}" FontSize="{TemplateBinding FontSize}"
                                 Margin="0" TextWrapping="NoWrap" SnapsToDevicePixels="True" VerticalContentAlignment="Center" Height="26"/>
                        <Border x:Name="borderNormal" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{StaticResource EGrayBrush}" CornerRadius="0" Opacity="1"/>
                        <Border x:Name="borderFocus" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0" Opacity="0"/>

                        <!--右侧下拉button设置-->                        
                        <ToggleButton Grid.Column="1" BorderThickness="3" Style="{StaticResource ComboxStyleBtn}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                        
                        <!--弹出popup整体设置-->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <!--弹出popup边框-->
                            <Border CornerRadius="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" MaxHeight="{TemplateBinding MaxDropDownHeight}" Width="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="1"/>
                                </Border.Effect>
                                <!--下拉幕布边界背景设置 MaxHeight="{TemplateBinding MaxDropDownHeight}"-->
                                <ScrollViewer Margin="0,0,0,0"   SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BorderThickness="2" >
                                     <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True--> 
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="{StaticResource EGrayBrush}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="borderNormal" Value="0"/>
                            <Setter Property="Opacity" TargetName="borderFocus" Value="1"/>
                         </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>